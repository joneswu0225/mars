<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jones.mars.repository.BlockSceneTypeMapper" >
    <insert id="insert" parameterType="BlockSceneType" useGeneratedKeys="true" keyProperty="id">
        insert into block_scene_type(`name`,`detail`, `block_id`,`seq`)
        values(#{name}, #{detail}, #{blockId}, #{seq})
    </insert>
    <insert id="update" parameterType="BlockSceneType">
        update block_scene_type set name = #{name}, detail=#{detail} where id=#{id}
    </insert>
    <select id="findList" resultType="BlockSceneType" parameterType="Query">
        <include refid="com.jones.mars.repository.BaseMapper.startPage" />
        select * from block_scene_type where 1=1
        <if test="blockId != null">
             and block_id=#{blockId}
        </if>
        <if test="blockId != null">
        order by seq
        </if>
        <include refid="com.jones.mars.repository.BaseMapper.endPage" />
    </select>
    <select id="findCount" resultType="java.lang.Integer" parameterType="Query">
        select count(*) from block_scene_type
        where delete_flg=0
        <if test="blockId != null">
            and block_id = #{blockId}
        </if>
    </select>
    <select id="findAllName" resultType="BlockSceneType" parameterType="Query">
        select id, name from block_scene_type
        where delete_flg=0
        <if test="blockId != null">
            and block_id = #{blockId}
        </if>
        order by seq, name
    </select>
    <select id="findMaxSeqByBlockId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select max(seq) from block_scene_type where block_id=#{blockId}
    </select>
    <update id="updateBlockSceneTypeSeq">
        update block_scene_type set seq=case
        <foreach collection="sceneTypeIds" item="sceneTypeId" index="index">
            when id=#{sceneTypeId} then #{index}
        </foreach>
        end
        where id in
        <foreach collection="sceneTypeIds" item="sceneTypeId" index="index" separator="," open="(" close=")">
            #{sceneTypeId}
        </foreach>
    </update>
    <resultMap id="SceneTypeProjectSceneMap" type="BlockSceneType" >
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="block_id" column="blockId" />
        <collection property="sceneList" ofType="Scene" column="scene_type_id">
            <id column="sceneId" property="id"/>
            <result column="sceneName" property="name"/>
            <result column="code" property="code"/>
        </collection>
    </resultMap>
    <select id="findSceneTypeProjectScene" resultMap="SceneTypeProjectSceneMap" parameterType="Query">
        select t.name, t.id,t.block_id, s.name as sceneName, s.id as sceneId, s.code from block_scene_type t, scene s
        where t.id=s.scene_type_id and t.delete_flg=0 and s.delete_flg=0
        <if test="blockId != null">
            and t.block_id = #{blockId}
        </if>
        order by id desc
    </select>
    <select id="findAll" resultType="BlockSceneType" parameterType="Query">
        select * from block_scene_type
        where delete_flg=0
        <if test="blockId != null">
            and block_id = #{blockId}
        </if>
        order by id desc
    </select>
    <select id="findOne" resultType="BlockModule">
        select * from block_scene_type where id=#{id}
    </select>
    <update id="delete">
        update block_scene_type set delete_flg=1 where id=#{id}
    </update>
</mapper>