<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jones.mars.repository.ProjectSceneMapper" >
    <insert id="insertRecord" parameterType="ProjectScenes">
            insert into project_scene(`id`, `project_id`, `scene_id`, `seq`) values
            <foreach collection="projectSceneList" item="param" index="index" separator=",">
            (#{param.id}, #{param.projectId}, #{param.sceneId}, #{index})
            </foreach>
            ON DUPLICATE KEY UPDATE
            <foreach collection="sceneIds" item="sceneId" index="index" separator=",">
            seq = #{index}
        </foreach>
    </insert>
    <insert id="insertOne" parameterType="ProjectSceneParam" useGeneratedKeys="true" keyProperty="id">
        insert into project_scene(`id`,`project_id`, `scene_id`, `seq`) values
        (#{id}, #{projectId}, #{sceneId}, #{seq}) ON DUPLICATE KEY UPDATE seq=#{seq}
    </insert>
    <select id="findMaxSeqByProjectId" parameterType="java.lang.String" resultType="java.lang.Integer">
        select max(seq) from project_scene where project_id=#{projdectId}
    </select>
    <update id="updateProjectSceneSeq" parameterType="ProjectSceneParam">
        update project_scene set seq=case
        <foreach collection="sceneIds" item="sceneId" index="index">
            when scene_id=#{sceneId} then #{index}
        </foreach>
        end
        where project_id=#{projectId} and scene_id in
        <foreach collection="sceneIds" item="sceneId" index="index" separator="," open="(" close=")">
            #{sceneId}
        </foreach>
    </update>
    <delete id="delete" parameterType="ProjectScene">
        delete from project_scene where project_id = #{projectId} and scene_id=#{sceneId}
    </delete>
</mapper>