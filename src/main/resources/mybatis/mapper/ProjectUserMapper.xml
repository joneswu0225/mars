<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jones.mars.repository.ProjectUserMapper" >
    <insert id="insert" parameterType="ProjectUserParam" useGeneratedKeys="true" keyProperty="id">
        insert into project_user(`project_id`, `user_id`, `manager_flg`) values
        <foreach collection="userIds" item="userId" index="index" separator=",">
            (#{projectId}, #{userId}, <if test="managerFlg == null">0</if><if test="managerFlg!=null">#{managerFlg}</if>)
        </foreach>
        ON DUPLICATE KEY UPDATE
        <foreach collection="userIds" item="userId" index="index" separator=",">
            manager_flg = <if test="managerFlg == null">0</if><if test="managerFlg!=null">#{managerFlg}</if>
        </foreach>
    </insert>
    <!-- TODO 所属部门　department_user 在一对多情况下会有隐患，list与count的数量不匹配 -->
    <select id="findList" resultType="ProjectUser">
        <include refid="com.jones.mars.repository.BaseMapper.startPage" />
        select pu.*,u.mobile, up.sgname, up.email,up.avatar, up.description, d.name as departmentName from project_user pu
        left join user_profile up on pu.user_id=up.user_id left join user u on pu.user_id=u.id
        left join department_user du on du.user_id=pu.user_id
        left join department d on du.department_id=d.id
        where 1=1
        <if test="projectId != null">
            and project_id=#{projectId}
        </if>
        <if test="projectIds != null">
            and project_id in (
            <foreach collection="projectIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="managerFlg != null">
            and manager_flg=#{managerFlg}
        </if>
        order by manager_flg desc, pu.user_id
        <include refid="com.jones.mars.repository.BaseMapper.endPage" />
    </select>
    <select id="findCount" resultType="java.lang.Integer" parameterType="Query">
        select count(*) from project_user pu
        left join user_profile up on pu.user_id=up.user_id left join user u on pu.user_id=u.id
        left join department_user du on du.user_id=pu.user_id
        left join department d on du.department_id=d.id
        where 1=1
        <if test="projectId != null">
            and pu.project_id=#{projectId}
        </if>
        <if test="userId != null">
            and pu.user_id=#{userId}
        </if>
        <if test="projectIds != null">
            and pu.project_id in (
            <foreach collection="projectIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="managerFlg != null">
            and manager_flg=#{managerFlg}
        </if>
    </select>
    <select id="findAll" resultType="ProjectUser">
        select pu.*,u.mobile, up.sgname, up.email, up.avatar, up.description, d.name as departmentName from project_user pu
        left join user_profile up on pu.user_id=up.user_id left join user u on pu.user_id=u.id
        left join department_user du on du.user_id=pu.user_id
        left join department d on du.department_id=d.id
        where 1=1
        <if test="projectId != null">
            and project_id=#{projectId}
        </if>
        <if test="projectIds != null">
            and project_id in (
            <foreach collection="projectIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="managerFlg != null">
            and manager_flg=#{managerFlg}
        </if>
        order by manager_flg desc, pu.user_id
    </select>
    <update id="update" parameterType="ProjectUserParam">
        update project_user set manager_flg=#{managerFlg} where project_id=#{projectId}
        <if test="userId != null">
            and user_id=#{userId}
        </if>
    </update>
    <delete id="delete">
        delete from project_user where
        <if test="ids != null">
            id in (
                <foreach collection="ids" item="item" separator=",">
                    #{item}
                </foreach>
            )
        </if>
        <if test="projectId != null">
            project_id=#{projectId} and user_id=#{userId}
        </if>
    </delete>
    <delete id="deleteByEnterpriseUser">
        delete from project_user where project_id in (select id from project where ori_enterprise_id=#{enterprise_id}) and user_id=#{userId}
    </delete>

    <select id="findProjectUserByRolePermission" resultType="ProjectUser" parameterType="RolePermissionParam">
        SELECT DISTINCT pu.id, pu.project_id, pu.user_id FROM `role_permission` rp , role r ,user_role ur,project p, project_user pu
        where rp.role_id=r.id and ur.role_id=rp.role_id and p.class_id=rp.class_id and rp.operation=1 and
        pu.project_id=p.id and pu.user_id=ur.user_id
        <if test="roleId != null">
            and r.id=#{roleId}
        </if>
        <if test="userId != null">
            and pu.user_id=#{userId}
        </if>
        <if test="permissionId != null">
            and rp.id=#{permissionId}
        </if>
    </select>

</mapper>