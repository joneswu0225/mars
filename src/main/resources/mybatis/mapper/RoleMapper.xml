<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jones.mars.repository.RoleMapper" >
    <resultMap id="BlockMap" type="Block" >
        <id column="blockId" property="id"/>
        <result column="enterpirse_id" property="enterpriseId" />
        <result column="blockName" property="name" />
        <result column="blockCode" property="code" />
        <result column="blockStatus" property="status" />
        <result column="blockImageUrl" property="imageUrl" />
        <result column="blockIcon" property="icon" />
        <result column="blockPanoPath" property="panoPath" />
        <collection property="moduleList" ofType="BlockModule" column="blockId">
            <id column="moduleId" property="id"/>
            <result column="blockId" property="blockId"/>
            <result column="moduleName" property="name"/>
            <result column="moduleSeq" property="seq"/>
            <collection property="classList" ofType="BlockClass" column="moduleId">
                <id column="pId" property="permissionId"/>
                <result column="classId" property="id"/>
                <result column="moduleId" property="moduleId"/>
                <result column="className" property="name"/>
                <result column="classSeq" property="seq"/>
                <result column="operation" property="operation"/>
            </collection>
        </collection>
    </resultMap>
    <select id="findGrantedBlock" resultMap="BlockMap">
<<<<<<< HEAD
        select p.id pId, r.enterprise_id, r.block_id as blockId, b.name as blockName,b.status as blockStatus,b.icon as blockIcon,b.image_url as blockImageUrl,b.panoPath as blockPanoPath,
        m.id as moduleId, m.name as moduleName, m.seq as moduleSeq, c.id as classId, c.name as className, c.seq as classSeq, p.operation
=======
        select p.id pId, r.enterprise_id, r.block_id as blockId, b.name as blockName,b.status as blockStatus,b.code as blockCode
        m.id as moduleId, m.name as moduleName, c.id as classId, c.name as className, p.operation
>>>>>>> develop
        from user_role ur, role r, role_permission p, block_class c, block_module m, block b
        where ur.role_id=r.id and ur.role_id=p.role_id and p.class_id=c.id and c.module_id=m.id and r.block_id=b.id
        and ur.user_id=#{userId}
        <if test="enterpriseId != null">
            and r.enterprise_id = #{enterpriseId}
        </if>
        <if test="operation != null">
            and p.operation = #{operation}
        </if>
<<<<<<< HEAD
        order by r.enterprise_id, r.block_id, m.seq,c.seq
=======
        <if test="code != null and code != ''">
            and b.code = #{code}
        </if>
        order by r.enterprise_id, r.block_id, m.id
>>>>>>> develop
    </select>

    <insert id="insert" parameterType="Role" useGeneratedKeys="true" keyProperty="id">
        insert into role(`name`, `block_id`, `image`, `enterprise_id`, `create_time`, `update_time`)
        values(#{name}, #{blockId},#{image}, #{enterpriseId}, now(), now())
    </insert>
    <insert id="update" parameterType="Role">
        update role set name = #{name},
        <if test="name != null and name !=''">
            name = #{name},
        </if>
        update_time=now() where id=#{id}
    </insert>
    <resultMap id="RolePermissionMap" type="Role" >
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="block_id" property="blockId" />
        <result column="update_time" property="updateTime" />
        <result column="create_time" property="createTime" />
        <collection property="permissionList" ofType="RolePermission" column="role_id">
            <id column="permissionId" property="id"/>
            <result column="role_id" property="roleId"/>
            <result column="class_id" property="classId"/>
            <result column="operation" property="operation"/>
        </collection>

    </resultMap>
    <select id="findPermissionList" resultMap="RolePermissionMap" parameterType="Query">
        select r.id, r.name,r.image, r.block_id,r.update_time, r.create_time, p.id as permissionId, p.role_id, p.class_id, p.operation
        from role r left join role_permission p on r.id=p.role_id
        where r.delete_flg=0
        <if test="blockId != null">
            and r.block_id = #{blockId}
        </if>
        <if test="enterpriseId != null">
            and r.enterprise_id = #{enterpriseId}
        </if>
        order by id desc
    </select>
    <resultMap id="RoleUserMap" type="Role" >
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="blockId" column="blockId" />
        <result property="blockName" column="blockName" />
        <result property="enterpriseId" column="enterpriseId" />
        <result property="update_time" column="updateTime" />
        <result property="create_time" column="createTime" />
        <collection property="userList" ofType="User" column="user_id">
            <id column="user_id" property="id"/>
            <result column="sgname" property="sgname"/>
            <result column="email" property="email"/>
            <result column="description" property="description"/>
            <result column="mobile" property="mobile"/>
            <result column="departmentName" property="departmentName"/>
        </collection>
        <collection property="permissionList" ofType="RolePermission" column="role_id">
            <id column="permissionId" property="id"/>
            <result column="role_id" property="roleId"/>
            <result column="module_id" property="moduleId"/>
            <result column="moduleName" property="moduleName"/>
            <result column="class_id" property="classId"/>
            <result column="className" property="className"/>
            <result column="operation" property="operation"/>
        </collection>
    </resultMap>
    <select id="findList" resultMap="RoleUserMap" parameterType="Query">
        <include refid="com.jones.mars.repository.BaseMapper.startPage" />
        select r.id, r.name,r.image, r.block_id as blockId, b.name as blockName,b.enterprise_id as enterpriseId,r.update_time, r.create_time,  p.id as permissionId, p.role_id, p.class_id, c.name as className, c.module_id, m.name as moduleName, p.operation,
        up.sgname, up.user_id as user_id,up.description, up.email,u.mobile, d.name as departmentName
        from role r left join user_role ur on r.id=ur.role_id left join user_profile up on ur.user_id=up.user_id left join user u on up.user_id=u.id left join department_user du on du.user_id=ur.user_id left join department d on du.department_id=d.id
        left join block b on r.block_id=b.id LEFT JOIN role_permission p on p.role_id=r.id
        left join block_class c on p.class_id=c.id left join block_module m on c.module_id=m.id
        where r.delete_flg=0
        <if test="blockId != null">
            and r.block_id = #{blockId}
        </if>
        <if test="enterpriseId != null">
            and r.enterprise_id = #{enterpriseId}
        </if>
        order by id desc
        <include refid="com.jones.mars.repository.BaseMapper.endPage" />
    </select>

    <select id="findCount" resultType="java.lang.Integer" parameterType="Query">
        select count(*) from role
        where delete_flg=0
        <if test="blockId != null">
            and block_id = #{blockId}
        </if>
        <if test="enterpriseId != null">
            and enterprise_id = #{enterpriseId}
        </if>
    </select>
    <select id="findAllName" resultType="java.lang.Object" parameterType="Query">
        select id, name from role
        where delete_flg=0
        order by name
    </select>
    <select id="findAll" resultMap="RoleUserMap">
        select r.id, r.name,r.image, r.block_id as blockId, b.name as blockName,b.enterprise_id as enterpriseId,r.update_time, r.create_time,  p.id as permissionId, p.role_id, p.class_id, c.name as className, c.module_id, m.name as moduleName, p.operation,
        up.sgname, up.user_id as user_id,up.description, up.email,u.mobile, d.name as departmentName
        from role r left join user_role ur on r.id=ur.role_id left join user_profile up on ur.user_id=up.user_id left join user u on up.user_id=u.id left join department_user du on du.user_id=ur.user_id left join department d on du.department_id=d.id
        left join block b on r.block_id=b.id LEFT JOIN role_permission p on p.role_id=r.id
        left join block_class c on p.class_id=c.id left join block_module m on c.module_id=m.id
        where r.delete_flg=0
        <if test="blockId != null">
            and r.block_id = #{blockId}
        </if>
        <if test="enterpriseId != null">
            and r.enterprise_id = #{enterpriseId}
        </if>
        order by id desc
    </select>
    <select id="findOne" resultMap="RolePermissionMap">
        select r.id, r.name, r.image,r.block_id,r.update_time, r.create_time, p.id as permissionId, p.role_id, p.class_id, p.operation
        from role r left join role_permission p on r.id=p.role_id
        where id=#{id}
    </select>
    <update id="delete">
        update role set delete_flg=1 where id=#{id}
    </update>
</mapper>