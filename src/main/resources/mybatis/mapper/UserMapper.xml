<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jones.mars.repository.UserMapper" >
    <insert id="insertRecord" parameterType="User">
        insert into user(`id`, `mobile`, `user_type`
        , `create_time`, `update_time`
        <if test="password != null and password !=''">
        , `password`
        </if>
        <if test="openid != null and openid !=''">
        , `openid`
        </if>
        )
        values(#{id}, #{mobile}, #{userType}, now(), now()
        <if test="password != null and password !=''">
        , #{password}
        </if>
        <if test="openid != null and openid !=''">
        , #{openid}
        </if>
        )
    </insert>
    <insert id="insertProfile" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        insert into user_profile(`id`, `user_id`, `nickname`, `sgname`, `job`, `province`, `city`, `address`, `description`, `birthday`, `avatar`, `namecard`)
        values(#{id}, #{userId}, #{nickname}, #{sgname}, #{job}, #{province}, #{city}, #{address}, #{description}, #{birthday}, #{avatar}, #{namecard});
    </insert>
    <update id="updateProfile" parameterType="User">
        update user_profile set user_id=#{userId}
        <if test="sgname != null and sgname !=''">
            ,sgname = #{sgname}
        </if>
        <if test="nickname != null and nickname !=''">
            ,nickname = #{nickname}
        </if>
        <if test="job != null and job !=''">
            ,job = #{job}
        </if>
        <if test="email != null and email !=''">
            ,email = #{email}
        </if>
        <if test="city != null and city !=''">
            ,city = #{city}
        </if>
        <if test="address != null and address !=''">
            ,address = #{address}
        </if>
        <if test="description != null and description !=''">
            ,description = #{description}
        </if>
        <if test="birthday != null ">
            ,birthday = #{birthday}
        </if>
        <if test="avatar != null and avatar !=''">
            ,avatar = #{avatar}
        </if>
        <if test="namecard != null and namecard !=''">
            ,namecard = #{namecard}
        </if>
        where user_id=#{userId}
    </update>
    <update id="update" parameterType="User">
        update user set id=#{id}, verify_code=null
        <if test="userType != null and userType !=''">
            ,user_type = #{userType}
        </if>
        <if test="password != null and password !=''">
            ,password = #{password}
        </if>
        <if test="verifyCode != null and verifyCode !=''">
            ,verify_code = #{verifyCode}
        </if>
        <if test="ip != null and ip !=''">
            ,ip = #{ip}
        </if>
        <if test="lastLoginTime != null">
            ,last_login_time = #{lastLoginTime}
        </if>
        <if test="unionid != null and unionid !=''">
            ,unionid = #{unionid}
        </if>
        <if test="openid != null and openid !=''">
            ,openid = #{openid}
        </if>
        <if test="password != null and password !=''">
            ,password = #{password}
        </if>
        <if test="terminalLimit">
            ,terminal_limit = #{terminalLimit}
        </if>
        where id=#{id}
    </update>
    <update id="updateByMobile" parameterType="java.util.Map">
        update user set mobile=#{mobile}, verify_code=null
        <if test="unionid != null and unionid !=''">
            ,unionid = #{unionid}
        </if>
        <if test="openid != null and openid !=''">
            ,openid = #{openid}
        </if>
        <if test="password != null and password !=''">
            ,password = #{password}
        </if>
        where mobile=#{mobile}
    </update>
    <select id="findList" resultType="User" parameterType="Query">
        <include refid="com.jones.mars.repository.CommonMapper.startPage" />
        select u.id, u.mobile,u.status,u.last_login_time,u.user_type, u.ip,u.openid, u.unionid,u.terminal_limit, p.nickname,p.sgname,p.job,p.email,p.province,p.city,p.address, p.birthday, p.avatar, p.namecard from user u left join user_profile p on u.id=p.user_id
        where u.delete_flg=0
        <if test="verifyCode != null and verifyCode !=''">
            and u.verify_code = #{verifyCode}
        </if>
        <if test="password != null and password !=''">
            and u.password = #{password}
        </if>
        <if test="mobile != null and mobile !=''">
            and u.mobile = #{mobile}
        </if>
        <if test="sgname != null and sgname !=''">
            and p.sgname like concat('%',#{sgname},'%')
        </if>
        <if test="nickname != null and nickname !=''">
            and p.nickname like concat('%',#{nickname},'%')
        </if>
        order by u.id desc
        <include refid="com.jones.mars.repository.CommonMapper.endPage" />
    </select>
    <select id="findCount" resultType="java.lang.Integer" parameterType="Query">
        select count(1) from `user` u left join user_profile p on u.id=p.user_id
        where delete_flg=0
        <if test="verifyCode != null and verifyCode !=''">
            and u.verify_code = #{verifyCode}
        </if>
        <if test="password != null and password !=''">
            and u.password = #{password}
        </if>
        <if test="mobile != null and mobile !=''">
            and u.mobile = #{mobile}
        </if>
        <if test="sgname != null and sgname !=''">
            and p.sgname like concat('%',#{sgname},'%')
        </if>
        <if test="nickname != null and nickname !=''">
            and p.nickname like concat('%',#{nickname},'%')
        </if>
    </select>
    <select id="findAll" resultType="User">
        select * from user
        where delete_flg=0
        order by id
    </select>
    <resultMap id="UserRoleMap" type="User" >
        <id property="id" column="id" />
        <result property="nickname" column="nickname" />
        <result property="sgname" column="sgname" />
        <result property="userType" column="userType" />
        <result property="departmentName" column="departmentName" />
        <result property="job" column="job" />
        <result property="email" column="email" />
        <result property="mobile" column="mobile" />
        <result property="province" column="province" />
        <result property="city" column="city" />
        <result property="address" column="address" />
        <result property="description" column="description" />
        <result property="birthday" column="birthday" />
        <result property="avatar" column="avatar" />
        <result property="namecard" column="namecard" />
        <result property="block_id" column="blockId" />
        <result property="update_time" column="updateTime" />
        <result property="create_time" column="createTime" />
        <collection property="roleList" ofType="Role" column="role_id">
            <id column="role_id" property="id"/>
            <result column="enterprise_id" property="enterpriseId"/>
            <result column="block_id" property="blockId"/>
            <result column="blockName" property="blockName"/>
            <result column="blockImageUrl" property="blockImageUrl"/>
            <result column="roleName" property="name"/>
            <result column="roleImage" property="image"/>
            <result column="enterpriseName" property="enterpriseName"/>
            <result column="enterpriseAvatar" property="enterpriseAvatar"/>
        </collection>
    </resultMap>
    <select id="findOneByMobile" resultType="User">
        select * from user where mobile=#{mobile}
    </select>
    <select id="findOne" resultMap="UserRoleMap">
        select u.id, u.user_type as userType, u.mobile,up.sgname,up.nickname, up.job, up.email, up.province, up.city, up.address, up.description, up.birthday, up.avatar, up.namecard, last_login_time, u.create_time, u.update_time, user_type,
        d.name as departmentName, role_id, r.name as roleName, r.image as roleImage,
        r.block_id, b.name as blockName, b.image_url as blockImageUrl,
        r.enterprise_id, e.name as enterpriseName, e.avatar as enterpriseAvatar
        from user u LEFT JOIN user_profile up on u.id=up.user_id left join user_role ur on u.id=ur.user_id LEFT JOIN role r on ur.role_id=r.id
        left join block b on r.block_id=b.id
        left join enterprise e on r.enterprise_id=e.id
        left join department_user du on u.id=du.user_id left join department d on du.department_id=d.id
        where u.id=#{id}
    </select>
    <update id="delete">
        update user set delete_flg=1 where id=#{id}
    </update>
</mapper>